logLevel: ${ERPC_LOG_LEVEL}
database:
  # todo: Should use the same postgres as the indexer but on a different schema
  evmJsonRpcCache:
    driver: postgresql
    postgresql:
      connectionUri: ${ERPC_DATABASE_URL}
      table: rpc_cache
server:
  httpHost: 0.0.0.0
  httpPort: 8080
metrics:
  enabled: true
  host: 0.0.0.0
  port: 4001
projects:
  - id: rpc-main
    networks:
      # ---------------------------------------------------------------------------- #
      #                                    Tesnets                                   #
      # ---------------------------------------------------------------------------- #
      # Arb sepolia
      - architecture: evm
        evm:
          chainId: 421614
        failsafe:
          timeout:
            duration: 120s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 20s
            backoffFactor: 2
            jitter: 500ms
          hedge:
            delay: 2000ms
            maxCount: 2
      # Optimism sepolia
      - architecture: evm
        evm:
          chainId: 11155420
        failsafe:
          timeout:
            duration: 120s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 20s
            backoffFactor: 2
            jitter: 500ms
          hedge:
            delay: 2000ms
            maxCount: 2
      # Base sepolia
      - architecture: evm
        evm:
          chainId: 84532
        failsafe:
          timeout:
            duration: 120s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 20s
            backoffFactor: 2
            jitter: 500ms
          hedge:
            delay: 2000ms
            maxCount: 2

      # ---------------------------------------------------------------------------- #
      #                                   Mainnets                                   #
      # ---------------------------------------------------------------------------- #
      # Polygon
      - architecture: evm
        evm:
          chainId: 137
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.5
            jitter: 200ms
          hedge:
            delay: 1000ms
            maxCount: 2
      # Arb
      - architecture: evm
        evm:
          chainId: 42161
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.5
            jitter: 200ms
          hedge:
            delay: 1000ms
            maxCount: 2
      # Arb
      - architecture: evm
        evm:
          chainId: 8453
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.5
            jitter: 200ms
          hedge:
            delay: 1000ms
            maxCount: 2
      # Arb
      - architecture: evm
        evm:
          chainId: 10
        failsafe:
          timeout:
            duration: 30s
          retry:
            maxCount: 5
            delay: 500ms
            backoffMaxDelay: 10s
            backoffFactor: 0.5
            jitter: 200ms
          hedge:
            delay: 1000ms
            maxCount: 2
    upstreams:
     - id: alchemy-multi-chain
       endpoint: alchemy://${ALCHEMY_API_KEY}
       type: evm+alchemy
       rateLimitBudget: alchemy
       failsafe:
         timeout:
           duration: 15s
         retry:
           maxCount: 2
           delay: 1000ms
           backoffMaxDelay: 10s
           backoffFactor: 0.3
           jitter: 500ms
rateLimiters:
  budgets:
    - id: alchemy
      rules:
        - method: "*"
          maxCount: 300
          period: 1s