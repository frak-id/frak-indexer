name: ðŸš€ Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging

concurrency:
  group: ${{ github.ref }}-deploy

env:
  CI: true

permissions:
  id-token: write
  contents: write

defaults:
  run:
    shell: bash

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          base: ${{ github.ref }}
          list-files: 'shell'
          filters: |
            erpc:
              - 'packages/erpc/erpc.yaml'
              - 'packages/erpc/Dockerfile'
            ponder:
              - 'packages/ponder/**'
            dockerImage:
              - 'packages/erpc/erpc.yaml'
              - 'packages/erpc/Dockerfile'
              - 'packages/ponder/**'

      - name: "ðŸ”§ Set up environment variables"
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "STAGE=production" >> $GITHUB_ENV
            echo "PONDER_PROD_IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
            echo "PONDER_DEV_IMAGE_TAG=latest" >> $GITHUB_ENV
          else
            echo "STAGE=dev" >> $GITHUB_ENV
            echo "PONDER_PROD_IMAGE_TAG=latest" >> $GITHUB_ENV
            echo "PONDER_DEV_IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: "ðŸ”¨ Install dependencies"
        run: bun install --frozen-lockfile

      - name: "ðŸ‘¥ Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::262732185023:role/github-action-deploy-role
          aws-region: eu-west-1
          retry-max-attempts: 5

      - name:  "ðŸ‘¥ Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        if: steps.changes.outputs.dockerImage == 'true'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        if: steps.changes.outputs.dockerImage == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64

      - name: "ðŸ”¨ Build Ponder dev docker dependencies"
        if: steps.changes.outputs.ponder == 'true' && env.STAGE == 'dev'
        uses: docker/build-push-action@v6
        with:
          context: ./packages/ponder
          platforms: linux/arm64
          push: true
          tags: |
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/indexer-dev:latest
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/indexer-dev:${{ github.sha }}
          # Github actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=min

      - name: "ðŸ”¨ Build Ponder prod docker dependencies"
        if: steps.changes.outputs.ponder == 'true' && env.STAGE == 'production'
        uses: docker/build-push-action@v6
        with:
          context: ./packages/ponder
          platforms: linux/arm64
          push: true
          tags: |
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/indexer-prod:latest
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/indexer-prod:${{ github.sha }}
          # Github actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=min

      - name: "ðŸ”¨ Build ERPC docker dependencies"
        if: steps.changes.outputs.erpc == 'true' && env.STAGE == 'production'
        uses: docker/build-push-action@v6
        with:
          context: ./packages/erpc
          platforms: linux/arm64
          push: true
          tags: |
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/erpc:latest
            262732185023.dkr.ecr.eu-west-1.amazonaws.com/erpc:${{ github.sha }}
          # Github actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=min
          no-cache: true

      - name: "ðŸš€ SST Deploy"
        run: |
          bun sst install
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            bun run deploy:prod
          else
            bun run deploy:dev
          fi
        env:
          ERPC_IMAGE_TAG: ${{ steps.changes.outputs.erpc == 'true' && github.sha || 'latest' }}
          PONDER_DEV_IMAGE_TAG: ${{ steps.changes.outputs.ponder == 'true' && env.PONDER_DEV_IMAGE_TAG || 'latest' }}
          PONDER_PROD_IMAGE_TAG: ${{ steps.changes.outputs.ponder == 'true' && env.PONDER_PROD_IMAGE_TAG || 'latest' }}
